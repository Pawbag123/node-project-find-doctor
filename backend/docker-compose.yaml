version: '3.8'

services:
  mongo1:
    image: mongo:7.0
    command: mongod --quiet --logpath /dev/null --replSet rs0 --bind_ip_all --port 27017
    # command: ['--replSet', 'rs0', '--bind_ip_all', '--port', '27017']
    ports:
      - 27017:27017
    extra_hosts:
      - 'host.docker.internal:host-gateway'
    logging:
      driver: 'none'
      # driver: 'json-file'
      # options:
      #   max-size: '10m'
      #   max-file: '3'
    healthcheck:
      test:
        [
          'CMD-SHELL',
          'echo ''try { rs.status() } catch (err) { rs.initiate({_id: "rs0", members: [{_id: 0, host: "host.docker.internal:27017"}]}) }'' | mongosh --port 27017 --quiet',
        ]
      interval: 5s
      timeout: 30s
      start_period: 10s
      start_interval: 1s
      retries: 30
    volumes:
      - 'mongo1_data:/data/db'
      - 'mongo1_config:/data/configdb'

  backend-init:
    build: .
    depends_on:
      mongo1:
        condition: service_healthy
    command: bash -c "npm run createIndexes && npm test"
    volumes:
      - .:/app
      - /app/node_modules
    environment:
      - NODE_ENV=development
      - PORT=5000
      - MONGODB_URI=mongodb://mongo1:27017/FindDoctorDB?replicaSet=rs0

  backend:
    build: .
    ports:
      - '5000:5000'
    volumes:
      - .:/app
      - /app/node_modules
    environment:
      - NODE_ENV=development
      - PORT=5000
      - MONGODB_URI=mongodb://mongo1:27017/FindDoctorDB?replicaSet=rs0
    depends_on:
      backend-init:
        condition: service_completed_successfully
    command: 'npm start'
    # command: bash -c "npm test && npm start"

volumes:
  mongo1_data:
  mongo1_config:
